---
import Layout from "../layouts/Layout.astro";
import PlotFigure from "../components/PlotFigure.astro";
import * as Plot from "@observablehq/plot";
import penguins from "../assets/penguins.json";
import olympians from "../assets/olympians.json";
import weather from "../assets/weather.json";
const delta = (d: any) => d.temp_max - d.temp_min;
---

<Layout class="bg-gray-50 min-h-screen py-12 px-6 md:px-12">
  <h1
    class="text-4xl md:text-5xl font-extrabold text-gray-900 text-center mb-12 select-none"
  >
    TP N°1 : Utilisation de PLOT
  </h1>

  <details
    class="mb-6 bg-white rounded-2xl shadow-[0_4px_12px_rgba(0,0,0,0.05)] transition-all duration-300 overflow-hidden"
  >
    <summary
      class="cursor-pointer px-6 py-4 text-lg md:text-xl font-medium text-gray-800 hover:text-blue-600 transition-colors select-none"
    >
      Exercice 1 : Les pingouins
    </summary>
    <div class="px-6 py-4">
      <PlotFigure
        options={{
          marks: [
            Plot.dot(penguins, { x: "culmen_length_mm", y: "culmen_depth_mm" }),
          ],
        }}
      />
    </div>
  </details>

  <details
    class="mb-6 bg-white rounded-2xl shadow-[0_4px_12px_rgba(0,0,0,0.05)] transition-all duration-300 overflow-hidden"
  >
    <summary
      class="cursor-pointer px-6 py-4 text-lg md:text-xl font-medium text-gray-800 hover:text-blue-600 transition-colors select-none"
    >
      Exercice 1 Bis : Les pingouins
    </summary>
    <div class="px-6 py-4 space-y-4">
      <PlotFigure
        options={{
          marks: [
            Plot.dot(penguins, {
              x: "culmen_length_mm",
              y: "culmen_depth_mm",
              stroke: "species",
            }),
          ],
        }}
      />
      <p class="text-gray-600 text-sm md:text-base">
        Dans cette version, nous attribuons un stroke en fonction de l'espèce.
      </p>
    </div>
  </details>

  <details
    class="mb-6 bg-white rounded-2xl shadow-[0_4px_12px_rgba(0,0,0,0.05)] transition-all duration-300 overflow-hidden"
  >
    <summary
      class="cursor-pointer px-6 py-4 text-lg md:text-xl font-medium text-gray-800 hover:text-blue-600 transition-colors select-none"
    >
      Exercice 2 : Les Athlètes
    </summary>
    <div class="px-6 py-4">
      <PlotFigure
        options={{
          marks: [
            Plot.auto(olympians, {
              x: "weight",
              y: "height",
              color: "count",
            }),
          ],
        }}
      />
    </div>
  </details>

  <details
    class="mb-6 bg-white rounded-2xl shadow-[0_4px_12px_rgba(0,0,0,0.05)] transition-all duration-300 overflow-hidden"
  >
    <summary
      class="cursor-pointer px-6 py-4 text-lg md:text-xl font-medium text-gray-800 hover:text-blue-600 transition-colors select-none"
    >
      Exercice 2 Bis : La densité des Athlètes
    </summary>
    <div class="px-6 py-4">
      <PlotFigure
        options={{
          marks: [
            Plot.density(olympians, {
              x: "weight",
              y: "height",
              stroke: "sex",
            }),
          ],
        }}
      />
    </div>
  </details>

  <details
    class="mb-6 bg-white rounded-2xl shadow-[0_4px_12px_rgba(0,0,0,0.05)] transition-all duration-300 overflow-hidden"
  >
    <summary
      class="cursor-pointer px-6 py-4 text-lg md:text-xl font-medium text-gray-800 hover:text-blue-600 transition-colors select-none"
    >
      Exercice 2 Bis : Les Athlètes en Hexbin
    </summary>
    <div class="px-6 py-4">
      <PlotFigure
        options={{
          marks: [
            Plot.hexagon(
              olympians,
              Plot.hexbin(
                { fill: "count" },
                { x: "weight", y: "height", symbol: "square" }
              )
            ),
          ],
          color: { scheme: "YlGnBu" },
        }}
      />
    </div>
  </details>

  <details
    class="mb-6 bg-white rounded-2xl shadow-[0_4px_12px_rgba(0,0,0,0.05)] transition-all duration-300 overflow-hidden"
  >
    <summary
      class="cursor-pointer px-6 py-4 text-lg md:text-xl font-medium text-gray-800 hover:text-blue-600 transition-colors select-none"
    >
      Exercice 3 : Températures quotidiennes
    </summary>
    <div class="px-6 py-4">
      <PlotFigure
        options={{
          marks: [
            Plot.dot(weather, {
              fill: (d) => new Date(d.date).getUTCMonth(),
              x: "temp_min",
              y: delta,
            }),
            Plot.dot(
              weather,
              Plot.selectMaxY({ x: "temp_min", y: delta, r: 5 })
            ),
            Plot.text(
              weather,
              Plot.selectMaxY({
                x: "temp_min",
                y: delta,
                text: (d) => new Date(d.date).toLocaleDateString(),
                lineAnchor: "bottom",
                dy: -10,
              })
            ),
          ],
        }}
      />
    </div>
  </details>

  <script is:inline>
    const allDetails = document.querySelectorAll("details");
    allDetails.forEach((detail) => {
      detail.addEventListener("toggle", (e) => {
        if (detail.open) {
          allDetails.forEach((other) => {
            if (other !== detail) other.open = false;
          });
        }
      });
    });
  </script>
</Layout>
